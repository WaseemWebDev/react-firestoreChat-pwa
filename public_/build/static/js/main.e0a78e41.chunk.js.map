{"version":3,"sources":["firebase.js","components/Allusers.js","components/chatSidebar.js","components/notFound.js","components/conversation.js","App.js","index.js","swDev.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","AllUsers","user","userId","userName","name","checkLoginUserName","room","List","ListItem","alignItems","className","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","Typography","component","variant","color","Button","Link","to","size","Divider","useStyles","makeStyles","theme","root","flexGrow","height","margin","box","padding","spacing","textAlign","backgroundColor","inline","display","ChatSidebar","useState","users","setUsers","loading","setLoading","promptUserName","setpromptUserName","addUserInput","setAddUserInput","useEffect","a","collection","orderBy","onSnapshot","querySnapshot","list","forEach","doc","data","push","id","prompt","setUserName","chatRooms","React","open","setOpen","handleClose","classes","width","Grid","container","justify","item","xl","xs","sm","Box","boxShadow","style","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","label","type","fullWidth","value","onChange","e","target","DialogActions","add","timestamp","FieldValue","serverTimestamp","map","index","key","NotFound","Conversation","messages","setMessages","input","setInput","useParams","rname","myRef","useRef","scrollToRef","current","scrollIntoView","console","log","text","getMessages","overflowY","message","fontWeight","marginRight","background","borderRadius","ref","required","alert","fontSize","marginTop","marginLeft","App","exact","path","ReactDOM","render","StrictMode","document","getElementById","swDev","process","navigator","serviceWorker","register","then","registration"],"mappings":"mRAWEA,IAASC,cAVa,CACpBC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAEeC,EAFET,IAASU,Y,+ECDb,SAASC,EAAT,GAAmD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,OAAOC,EAAiB,EAAjBA,SAASC,EAAQ,EAARA,KACrDC,EAAsBF,IAAaF,EAAKK,KAE1C,OACE,kBAACC,EAAA,EAAD,KACEF,EAAqB,KACpB,oCACD,kBAACG,EAAA,EAAD,CAAUC,WAAW,aAAaC,UAAU,cAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,iCAG/B,kBAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,UAEE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAAOC,QAAQ,QAAQC,MAAM,eAChDrB,EAAKK,SAMZ,kBAACiB,EAAA,EAAD,CACAH,UAAWI,IACXC,GAAE,wBAAmBvB,EAAnB,YAA6BC,EAA7B,YAAyCC,GACzCsB,KAAK,QACLL,QAAQ,YACRC,MAAM,WALR,SAWJ,kBAACK,EAAA,EAAD,CAASN,QAAQ,QAAQD,UAAU,S,iDC/BnCQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,OAAQ,IACRC,OAAQ,QAGVC,IAAK,CACHC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,SACXC,gBAAgB,SAElBC,OAAQ,CACNC,QAAS,cAIE,SAASC,IAAe,IAAD,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAENF,oBAAS,GAFH,mBAE7BG,EAF6B,KAEpBC,EAFoB,OAGSJ,mBAAS,IAHlB,mBAG7BK,EAH6B,KAGZC,EAHY,OAIGN,mBAAS,IAJZ,mBAI7BO,EAJ6B,KAIhBC,EAJgB,KAMpCC,qBAAU,WAAM,4CAUd,sBAAAC,EAAA,sEACQvD,EAASwD,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAACC,GAC5E,IAAMC,EAAO,GACbD,EAAcE,SAAQ,SAACC,GAAS,IACtBtD,EAASsD,EAAIC,OAAbvD,KACRoD,EAAKI,KAAK,CACRC,GAAIH,EAAIG,GACRzD,YAGJuC,EAASa,GACTX,GAAW,MAXf,4CAVc,uBACd,WACE,IAAI5C,EAAY6D,OAAO,mBACV,KAAb7D,GACF8C,EAAkB9C,GAoBlB8D,GAxBc,mCAyBdC,KACC,IAhCiC,MAiCZC,IAAMxB,UAAS,GAjCH,mBAiC7ByB,EAjC6B,KAiCvBC,EAjCuB,KAuC9BC,EAAc,WAClBD,GAAQ,IAYJE,EAAU3C,IAChB,OAAe,IAAZkB,EACO,gCAAQ,yBAAKhC,IAAI,yEAAyED,IAAI,SAAS2D,MAAM,MAAOvC,OAAO,SAG1G,KAAnBe,EAEC,gCAAQ,yEAIb,yBAAKtC,UAAW6D,EAAQxC,MACtB,6BAEA,kBAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACtB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAKC,GAAI,GAC/B,kBAACC,EAAA,EAAD,CAAMtE,UAAW6D,EAAQpC,IAAK8C,UAAW,GACzC,gCACA,kBAAC9D,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,eAA9C,YAGA,kBAACK,EAAA,EAAD,CAASN,QAAQ,UACjB,6BACA,kBAACF,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,eAA9C,uBACsB,uBAAG4D,MAAO,CAAC5D,MAAM,SAAjB,IAA4B0B,IAElD,kBAACrB,EAAA,EAAD,CAASN,QAAQ,UAEjB,6BACA,6BACJ,kBAACE,EAAA,EAAD,CAAQF,QAAQ,WAAWC,MAAM,UAAU6D,QA/CvB,WACtBd,GAAQ,KA8CN,YAGA,kBAACe,EAAA,EAAD,CAAQhB,KAAMA,EAAMiB,QAASf,EAAagB,kBAAgB,qBACxD,kBAACC,EAAA,EAAD,CAAaxB,GAAG,qBAAhB,YACA,kBAACyB,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTxD,OAAO,QACP6B,GAAG,OACH4B,MAAM,kBACNC,KAAK,QACLC,WAAS,EACTC,MAAO5C,EACP6C,SAAU,SAACC,GAAD,OAAM7C,EAAgB6C,EAAEC,OAAOH,WAG7C,kBAACI,EAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,CAAQ4D,QAASb,EAAahD,MAAM,WAApC,UAGA,kBAACC,EAAA,EAAD,CAAQ4D,QAAS,WA7DnBrF,EAASwD,WAAW,YAChB6C,IAAI,CACH7F,KAAK4C,EACLkD,UAAW/G,IAASU,UAAUsG,WAAWC,oBAE3ChC,KA2DEhD,MAAM,WAHT,WAUGsB,EAAM2D,KAAI,SAACtG,EAAMuG,GAChB,OAAO,kBAACxG,EAAD,CAAUyG,IAAKxG,EAAK8D,GAAK5D,SAAU6C,EAAiB9C,OAAQD,EAAK8D,GAAI3D,KAAMH,EAAKK,KAAML,KAAMA,WCjJlG,SAASyG,IACpB,OACI,8C,qBCOF9E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,OAAQ,IACRC,OAAQ,QAEVC,IAAK,CACHC,QAASN,EAAMO,QAAQ,GACvBC,UAAW,SACXC,gBAAiB,SAEnBC,OAAQ,CACNC,QAAS,cAIE,SAASkE,IAAgB,IAAD,EACLhE,mBAAS,IADJ,mBAC9BiE,EAD8B,KACpBC,EADoB,OAEdlE,mBAAS,IAFK,mBAEhCmE,EAFgC,KAE1BC,EAF0B,OAGJpE,oBAAS,GAHL,mBAG3BG,EAH2B,KAGlBC,EAHkB,OAIjBJ,mBAAS,IAAnBT,EAJ2B,sBAKT8E,cAApBjD,EAL6B,EAK7BA,GAAI3D,EALyB,EAKzBA,KAAO6G,EALkB,EAKlBA,MACbC,EAAQC,iBAAO,MAGfC,EAAc,kBAAMF,EAAMG,QAAQC,kBAGxClE,qBAAU,WAAM,4CAEd,sBAAAC,EAAA,sEAEQvD,EACHwD,WAAW,YAAYM,IAAIG,GAC3BT,WAAW,QAAQC,QAAQ,YAAY,OACvCC,YAAW,SAACC,GACX,IAAMC,EAAO,GACbD,EAAcE,SAAQ,SAACC,GACrB2D,QAAQC,IAAI5D,EAAIC,QADa,MAEND,EAAIC,OAAnB4D,EAFqB,EAErBA,KAAMxH,EAFe,EAEfA,KACdyD,EAAKI,KAAK,CACRC,GAAIH,EAAIG,GACR0D,OACAxH,YAGJ4G,EAAYnD,GACZX,GAAW,GACXqE,OAlBN,4CAFc,uBAAC,WAAD,wBAuBdM,KAEC,CAAC3D,EAAG3D,EAAK6G,IAoBZ,IAAM1C,EAAU3C,IACd,OAAe,IAAZkB,EACO,gCAAQ,yBAAKhC,IAAI,yEAAyED,IAAI,SAAS2D,MAAM,MAAOvC,OAAO,SAKrI,yBAAKvB,UAAW6D,EAAQxC,MACtB,6BAEA,kBAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACtB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAKtE,UAAW6D,EAAQpC,IAAK8C,UAAW,GACtC,gCAEE,kBAAC9D,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKC,MAAM,eAA9C,cACc2F,GAEd,kBAACtF,EAAA,EAAD,CAASN,QAAQ,WAEnB,6BAAM,yBAAM6D,MAAO,CAACjD,OAAO,QAAQ0F,UAAU,SAC5Cf,EAASL,KAAI,SAACqB,EAASpB,GACtB,OACE,yBAAKC,IAAKmB,EAAQ7D,IAChB,wBAAImB,MAAO,CAAC2C,WAAW,OAAOpF,QAAQ,SAASqF,YAAY,SAAUF,EAAQ3H,MAC7E,yBACEiF,MAAO,CACL6C,WAAYH,EAAQ3H,OAASG,EAAQ,UAAY,QACjDqC,QAAS,eACTuF,aAAc,MACd1G,MAAO,QACPkD,MAAO,QAEPpC,QAAS,OACT0F,YAAYF,EAAQ3H,OAASG,EAAQ,OAAS,SAG/CwH,EAAQH,MAGX,6BAAK,6BAAK,iCAKhB,0BAAMQ,IAAKf,EAAOhC,MAAO,CAAChD,OAAOA,MAGjC,6BACA,kBAACP,EAAA,EAAD,CAASN,QAAQ,UAEjB,kBAACoE,EAAA,EAAD,CAAWyC,UAAQ,EAAEnC,SAAU,SAACC,GAAD,OAAMe,EAASf,EAAEC,OAAOH,QAAQA,MAAOgB,EAAOnB,MAAM,kBAEnF,kBAAC,IAAD,CAAWR,QAAS,WAtEf,KAAV2B,EACDqB,MAAM,0BAKNrI,EAASwD,WAAW,YAAYM,IAAIG,GAAIT,WAAW,QAAQ6C,IAAI,CAC7DsB,KAAMX,EACN7G,KAAc,OAATG,EAAe,UAAYA,EAChCgG,UAAW/G,IAASU,UAAUsG,WAAWC,oBAEzCS,EAAS,KA6DJK,KACElC,MAAO,CAAC5D,MAAM,OAAO8G,SAAS,OAAOC,UAAU,OAAOC,WAAW,cCjHjEC,MAnBf,WACE,OACE,yBAAK7H,UAAU,OACf,6BAAK,6BACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8H,OAAK,EAACC,KAAK,KAClB,kBAAC/F,EAAD,OAEA,kBAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,kCAClB,kBAAC9B,EAAD,OAEA,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIrH,UAAWsF,OCVzCgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGFC,SAASC,eAAe,SChBX,WACX,IAAIC,EAAK,UAAMC,GAAN,UAETC,UAAUC,cAAcC,SAASJ,GAAOK,MAAK,SAASC,GAElD9B,QAAQC,IAAI,qDAAsD6B,MDc1EN,I","file":"static/js/main.e0a78e41.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst  firebaseConfig = {\r\n    apiKey: \"AIzaSyBNXcTCkxN30Ea8eHDQNiwv_LTFCrWoluQ\",\r\n    authDomain: \"react-firestore-chat-4fae5.firebaseapp.com\",\r\n    databaseURL: \"https://react-firestore-chat-4fae5.firebaseio.com\",\r\n    projectId: \"react-firestore-chat-4fae5\",\r\n    storageBucket: \"react-firestore-chat-4fae5.appspot.com\",\r\n    messagingSenderId: \"866610989341\",\r\n    appId: \"1:866610989341:web:43f0990cfb9dd631d6f9f4\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const database = firebase.firestore();\r\n\r\n  export default database;","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function AllUsers({ user, userId,userName,name }) {\r\nlet checkLoginUserName =  userName === user.room;\r\n\r\n  return (\r\n    <List>\r\n     {checkLoginUserName ? null : (\r\n       <>\r\n      <ListItem alignItems=\"flex-start\" className=\"users-list\">\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n        </ListItemAvatar>\r\n       \r\n        <ListItemText\r\n          primary=\"Chatroom\"\r\n          secondary={\r\n            \r\n            <React.Fragment>\r\n              <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                {user.room}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n       \r\n          <Button\r\n          component={Link}\r\n          to={`/conversation/${userId}/${userName}/${name}`}\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Chat\r\n          </Button>\r\n     \r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      </>\r\n     )}\r\n     \r\n    </List>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport database from \"../firebase\";\r\nimport AllUsers from \"./Allusers\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 560,\r\n    margin: \"auto\",\r\n  \r\n  },\r\n  box: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor:\"white\"\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nexport default function ChatSidebar() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [promptUserName , setpromptUserName] = useState(\"\");\r\n  const [addUserInput,setAddUserInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function setUserName(){\r\n      let userName  = prompt(\"enter user name\");\r\n   if(userName !== \"\"){\r\n    setpromptUserName(userName)\r\n   }\r\n      \r\n\r\n      }\r\n    \r\n    async function chatRooms() {\r\n     await  database.collection(\"chatroom\").orderBy(\"timestamp\",\"desc\").onSnapshot((querySnapshot) => {\r\n        const list = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const { room } = doc.data();\r\n          list.push({\r\n            id: doc.id,\r\n            room,\r\n          });\r\n        });\r\n        setUsers(list);\r\n        setLoading(false);\r\n      });\r\n    }\r\n    setUserName()\r\n    chatRooms();\r\n  }, []);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const addUser = ()=>{\r\n        database.collection(\"chatroom\")\r\n           .add({\r\n             room:addUserInput,\r\n             timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n           });\r\n           handleClose();\r\n     }\r\n  \r\n\r\n  const classes = useStyles();\r\n  if(loading === true){\r\n    return  <center><img src=\"https://cdn.dribbble.com/users/1186261/screenshots/3718681/_______.gif\" alt=\"loader\" width=\"240\"  height=\"180\" /></center>\r\n \r\n  }\r\n  else if(promptUserName === \"\"){\r\n   \r\n    return <center><h2>please give user name to proceed further</h2></center>\r\n  }\r\n  return (\r\n   \r\n      <div className={classes.root} >\r\n        <br />\r\n         \r\n        <Grid container justify=\"center\">\r\n          <Grid item xl={3} xs={11}  sm={8}  >\r\n          <Box  className={classes.box} boxShadow={2}>\r\n          <center>\r\n          <Typography component=\"h4\" variant=\"h5\" color=\"textPrimary\">\r\n           ChatRoom\r\n          </Typography>\r\n          <Divider variant=\"inset\" />\r\n          <br/>\r\n          <Typography component=\"h4\" variant=\"h5\" color=\"textPrimary\">\r\n            You are Loged In as <b style={{color:\"blue\"}}> {promptUserName}</b>\r\n          </Typography>\r\n          <Divider variant=\"inset\" /> \r\n\r\n          <div>\r\n          <br/>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n       Add Room\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Add Room</DialogTitle>\r\n        <DialogContent>\r\n         \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Enter User name\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={addUserInput}\r\n            onChange={(e)=> setAddUserInput(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={()=>{\r\n            addUser();\r\n           \r\n          }} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n        </center>\r\n            {users.map((user, index) => {\r\n              return <AllUsers key={user.id}  userName={promptUserName}  userId={user.id} name={user.room} user={user} />;\r\n            })}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default function NotFound(){\r\n    return (\r\n        <h2>url not found </h2>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport database from \"../firebase\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 300,\r\n    margin: \"auto\",\r\n  },\r\n  box: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nexport default function Conversation() {\r\n  const [messages, setMessages] = useState([]);\r\n  let [input,setInput] = useState(\"\");\r\n     const [loading, setLoading] = useState(true);\r\n     const [margin] = useState(\"\");\r\n  const { id, name , rname} = useParams();\r\n  const myRef = useRef(null)\r\n \r\n  \r\n  const scrollToRef = () => myRef.current.scrollIntoView();\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    async function getMessages() {\r\n     \r\n      await database\r\n        .collection(\"chatroom\").doc(id)\r\n        .collection(\"chat\").orderBy(\"timestamp\",\"asc\")\r\n        .onSnapshot((querySnapshot) => {\r\n          const list = [];\r\n          querySnapshot.forEach((doc) => {\r\n            console.log(doc.data())\r\n            const { text, user } = doc.data();\r\n            list.push({\r\n              id: doc.id,\r\n              text,\r\n              user,\r\n            });\r\n          });\r\n          setMessages(list);\r\n          setLoading(false);\r\n          scrollToRef()\r\n        });\r\n    }\r\n    getMessages();\r\n\r\n  }, [id,name,rname]);\r\n\r\n  function addChat() {\r\n    if(input === \"\"){\r\n      alert(\"please type a message\")\r\n    }\r\n    \r\n    else{ \r\n      \r\n      database.collection(\"chatroom\").doc(id).collection(\"chat\").add({\r\n        text: input,\r\n        user:name === null? \"unknown\" : name,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n        setInput(\"\")\r\n\r\n    }\r\n   \r\n  }\r\n  \r\n  const classes = useStyles();\r\n    if(loading === true){\r\n      return  <center><img src=\"https://cdn.dribbble.com/users/1186261/screenshots/3718681/_______.gif\" alt=\"loader\" width=\"240\"  height=\"180\" /></center>\r\n\r\n    }\r\n    \r\n  return (\r\n    <div className={classes.root}>\r\n      <br />\r\n\r\n      <Grid container justify=\"center\">\r\n        <Grid item xl={3} xs={11} sm={8}>\r\n          <Box className={classes.box} boxShadow={2}>\r\n            <center>\r\n            \r\n              <Typography component=\"h4\" variant=\"h5\" color=\"textPrimary\">\r\n                ChatRoom : {rname}\r\n              </Typography>\r\n              <Divider variant=\"inset\" />\r\n            </center>\r\n            <br /><div  style={{height:\"400px\",overflowY:\"auto\"}}  >\r\n            {messages.map((message, index) => {\r\n              return (\r\n                <div key={message.id} >\r\n                  <h3 style={{fontWeight:\"50px\",display:\"inline\",marginRight:\"10px\"}}>{message.user}</h3> \r\n                  <div\r\n                    style={{\r\n                      background: message.user === name ?  \"#2979FF\" : \"green\",\r\n                      display: \"inline-block\",\r\n                      borderRadius: \"8px\",\r\n                      color: \"white\",\r\n                      width: \"180px\",\r\n                      \r\n                      padding: \"12px\",\r\n                      marginRight:message.user === name ?  \"60px\" : \"null\"\r\n                    }}\r\n                  >\r\n                    {message.text}\r\n                  </div>\r\n                  \r\n                  <br/><br/><br/>\r\n                  \r\n                </div>\r\n              );\r\n            })}\r\n            <span ref={myRef} style={{margin:margin}}></span> \r\n            </div>\r\n            \r\n            <br />\r\n            <Divider variant=\"inset\" />\r\n            \r\n            <TextField required  onChange={(e)=> setInput(e.target.value)} value={input} label=\"Enter Message\"  />\r\n            {/* <input type=\"text\" onChange={(e)=> setInput(e.target.value)} value={input} /> */}\r\n            <SendIcon  onClick={()=>{\r\n             addChat()\r\n             scrollToRef() \r\n            }} style={{color:\"blue\",fontSize:\"34px\",marginTop:\"17px\",marginLeft:\"17px\"}}/>\r\n           \r\n         \r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport ChatSidebar from './components/chatSidebar';\nimport NotFound from './components/notFound';\nimport Conversation from './components/conversation';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <br/><br/>\n    <Switch>\n        <Route exact path=\"/\">\n        <ChatSidebar />\n        </Route>\n        <Route exact path=\"/conversation/:id/:name/:rname\">\n        <Conversation />\n        </Route>\n        <Route exact path=\"*\" component={NotFound} />\n       \n      </Switch>\n   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter ,\n} from \"react-router-dom\";\nimport swDev from './swDev';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n</BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nswDev()\n","export default function swDev() {\r\n    let swDev = `${process.env.PUBLIC_URL}/sw.js`;\r\n\r\n    navigator.serviceWorker.register(swDev).then(function(registration) {\r\n        // Registration was successful\r\n        console.log('ServiceWorker registration successful with scope: ', registration);\r\n      })\r\n    }"],"sourceRoot":""}